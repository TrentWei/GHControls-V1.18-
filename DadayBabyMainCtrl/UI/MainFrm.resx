<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>67</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>